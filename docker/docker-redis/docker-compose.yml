version: '3.8'

services:
  redis:
    image: redis:7.2-alpine
    command: >
      sh -c "envsubst < /usr/local/etc/redis/redis.conf.template > /usr/local/etc/redis/redis.conf &&
             redis-server /usr/local/etc/redis/redis.conf"
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf.template:ro
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/run
      - /usr/local/etc/redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}

  api:
    build:
      context: ../..
      dockerfile: docker/Dockerfile
    image: pbdco/aws-spotter:redis
    container_name: spotter-api
    restart: unless-stopped
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_PROFILE=an-aws-spotter
      - AWS_DEFAULT_REGION=ap-south-1
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - UPDATE_INTERVAL=${UPDATE_INTERVAL:-300}
      - CACHE_EXPIRY=${CACHE_EXPIRY:-600}
      - INSTANCE_TYPES=${INSTANCE_TYPES:-"t3.micro,t3.small,t3.medium"}
      - LOG_LEVEL=DEBUG
      - GUNICORN_WORKERS=20
      - AWS_SHARED_CREDENTIALS_FILE=/root/.aws/credentials
      - AWS_CONFIG_FILE=/root/.aws/config
      - AWS_PROFILE=${AWS_PROFILE:-default}
      - CACHE_EXPIRY=600
      - PYTHONUNBUFFERED=1
    volumes:
      - ~/.aws:/root/.aws:ro
    ports:
      - "5001:5001"
    depends_on:
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '2'
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/run
    command: ["gunicorn", "--bind", "0.0.0.0:5001", "--workers", "${GUNICORN_WORKERS:-8}", "api:app"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1500
    ipam:
      driver: default
      config:
        - subnet: 172.31.0.0/16
