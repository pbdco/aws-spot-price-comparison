version: '3.8'

services:
  redis:
    image: redis:7-alpine
    command: >
      sh -c "apk add --no-cache gettext &&
             envsubst < /usr/local/etc/redis/redis.conf.template > /usr/local/etc/redis/redis.conf &&
             redis-server /usr/local/etc/redis/redis.conf"
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf.template:ro
      - ~/.aws:/root/.aws:ro
      - redis_data:/data
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  api:
    build:
      context: ../..
      dockerfile: docker/docker-redis/Dockerfile
    command: python api.py
    ports:
      - "5001:5001"
    volumes:
      - ~/.aws:/home/appuser/.aws:ro
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - UPDATE_INTERVAL=300
      - CACHE_EXPIRY=600
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - INSTANCE_TYPES=t2.micro,t2.small,t2.medium,t3.micro,t3.small,t3.medium
      - GUNICORN_WORKERS=4
      - LOG_LEVEL=INFO
    depends_on:
      redis:
        condition: service_healthy

  worker:
    build:
      context: ../..
      dockerfile: docker/docker-redis/Dockerfile
    command: python worker.py
    volumes:
      - ~/.aws:/home/appuser/.aws:ro
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - UPDATE_INTERVAL=300
      - CACHE_EXPIRY=600
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - INSTANCE_TYPES=t2.micro,t2.small,t2.medium,t3.micro,t3.small,t3.medium
      - GUNICORN_WORKERS=4
      - LOG_LEVEL=INFO
    depends_on:
      redis:
        condition: service_healthy
    deploy:
      replicas: 2

  scheduler:
    build:
      context: ../..
      dockerfile: docker/docker-redis/Dockerfile
    command: python scheduler.py
    volumes:
      - ~/.aws:/home/appuser/.aws:ro
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - UPDATE_INTERVAL=300
      - CACHE_EXPIRY=600
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - INSTANCE_TYPES=t2.micro,t2.small,t2.medium,t3.micro,t3.small,t3.medium
      - GUNICORN_WORKERS=4
      - LOG_LEVEL=DEBUG
    depends_on:
      redis:
        condition: service_healthy

volumes:
  redis_data:
